@import url('https://fonts.googleapis.com/css2?family=Jacquard+12&family=Tiny5&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    width: 100vw;
    height: 100vh;
    background-color: rgb(19, 16, 22);
    overflow: hidden;
}
.timesnew {
  font-family: "Jacquard 12", system-ui;
  font-weight: 400;
  font-style: normal;
}
p, h1, h2, h3, h4, h5, h6 {
  font-family: "Tiny5", sans-serif;
  font-weight: 400;
  font-style: normal;
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
        transform-origin: center;
    }
    to {
        transform: rotate(360deg);
        transform-origin: center;
    }
}





/* - - - - - LOAD - - - - - */
#loading {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    outline: 0.2vw solid white;
    background-color: rgb(24, 19, 32);
}
#loading #icon {
    width: 5vw;
    animation: rotate 1s ease-in-out infinite forwards;
}
#loading #error-message {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 50vw;
    display: none;
}
#loading #error-message p {
    text-align: center;
    color: white;
    font-size: 5vw;
}
#loading #error-message p.error-minitext {
    font-size: 2vw;
}
#loading #error-message img {
    width: 20vw;
    margin: 2vw;
    animation: error-message-img 10s ease-in-out infinite forwards;
}
@keyframes error-message-img {
    0% {
        transform: rotate(0deg);
        transform-origin: center;
    }
    10% {
        transform: rotate(-90deg);
        transform-origin: center;
    }
    100% {
        transform: rotate(-90deg);
        transform-origin: center;
    }
}
@keyframes loading-successful {
    0% {
        transform: translateX(0vw);
    }
    45% {
        transform: translateX(0vw);
    }
    100% {
        transform: translateX(120vw);
    }
}
@keyframes loading-successful-icon {
    0% {
        transform: translateX(0vw) rotate(0deg);
        scale: 1;
    }
    40% {
        transform: translateX(-4vw) rotate(-20deg);
        scale: 2;
    }
    80% {
        transform: translateX(0vw);
        scale: 1.5;
    }
    100% {
        transform: translateX(0vw) rotate(180deg);
        scale: 1.5;
    }
}